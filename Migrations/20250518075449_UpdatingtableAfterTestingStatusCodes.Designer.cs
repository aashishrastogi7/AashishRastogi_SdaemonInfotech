// <auto-generated />
using System;
using CRUD_Operation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRUD_Operation.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250518075449_UpdatingtableAfterTestingStatusCodes")]
    partial class UpdatingtableAfterTestingStatusCodes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.16");

            modelBuilder.Entity("CRUD_Operation.Data.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0050cdbf-b9e4-4694-b969-f29d58e622e0"),
                            Description = "Testing the data insertion on time of Creation i.e Master data",
                            DueDate = new DateTime(2025, 5, 18, 13, 24, 49, 522, DateTimeKind.Local).AddTicks(9587),
                            IsComplete = true,
                            Title = "Test Task"
                        },
                        new
                        {
                            Id = new Guid("ea82cc33-ada9-4167-a884-5bc25abbedf2"),
                            Description = "task 2 for testing getall api",
                            DueDate = new DateTime(2025, 5, 18, 13, 24, 49, 522, DateTimeKind.Local).AddTicks(9614),
                            IsComplete = true,
                            Title = "Task 2"
                        },
                        new
                        {
                            Id = new Guid("ba1153be-c769-4f3a-841c-09bba904def8"),
                            Description = "task 3 for testing getbyID api",
                            DueDate = new DateTime(2025, 5, 18, 13, 24, 49, 522, DateTimeKind.Local).AddTicks(9616),
                            IsComplete = true,
                            Title = "Task3"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
